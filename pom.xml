<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.alibaba.dubbo</groupId>
	<artifactId>dubbo-feature-test</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<modules>
		<module>provider-test</module>
		<module>consumer-test</module>
		<module>api</module>
	</modules>
	<packaging>pom</packaging>

	<name>dubbo-feature-test</name>
	<description>Test project for Dubbo</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.6</java.version>
		<tomcat.version>7.0.59</tomcat.version>
		<docker.assemblyDescriptorRef>artifact</docker.assemblyDescriptorRef>
		<docker.from>docker.io/fabric8/java-jboss-openjdk8-jdk:1.0.10</docker.from>
		<docker.image>dubbo-test-${side}:0.0.1</docker.image>
		<docker.port.container.http>8080</docker.port.container.http>
		<docker.port.container.jolokia>8778</docker.port.container.jolokia>
		<fabric8.iconRef>icons/spring-boot</fabric8.iconRef>
		<fabric8.readinessProbe.httpGet.path>/health</fabric8.readinessProbe.httpGet.path>
		<fabric8.readinessProbe.httpGet.port>8080</fabric8.readinessProbe.httpGet.port>
		<fabric8.readinessProbe.initialDelaySeconds>5</fabric8.readinessProbe.initialDelaySeconds>
		<fabric8.readinessProbe.timeoutSeconds>30</fabric8.readinessProbe.timeoutSeconds>
		<fabric8.service.containerPort>8080</fabric8.service.containerPort>
		<fabric8.service.name>dubbo-feature-test</fabric8.service.name>
		<fabric8.service.port>80</fabric8.service.port>
		<fabric8.service.type>LoadBalancer</fabric8.service.type>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<version>2.5.7</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
			<version>4.0.35.Final</version>
		</dependency>
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>3.7.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-framework</artifactId>
			<version>2.12.0</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.31</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-simple</artifactId>
			<version>3.0.14</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>3.0.14</version>
		</dependency>
		<dependency>
			<groupId>org.apache.thrift</groupId>
			<artifactId>libthrift</artifactId>
			<version>0.8.0</version>
		</dependency>
		<dependency>
			<groupId>com.caucho</groupId>
			<artifactId>hessian</artifactId>
			<version>4.0.38</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>6.1.26</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.31</version>
		</dependency>


		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-juli</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
	</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>f8-build</id>
			<build>
				<defaultGoal>clean install docker:build fabric8:json</defaultGoal>
			</build>
		</profile>
		<profile>
			<id>f8-deploy</id>
			<build>
				<defaultGoal>clean install docker:build docker:push fabric8:json fabric8:apply</defaultGoal>
			</build>
			<properties>
				<fabric8.recreate>true</fabric8.recreate>
				<fabric8.imagePullPolicySnapshot>Always</fabric8.imagePullPolicySnapshot>
			</properties>
		</profile>
		<profile>
			<id>f8-local-deploy</id>
			<build>
				<defaultGoal>clean install docker:build fabric8:json fabric8:apply</defaultGoal>
			</build>
			<properties>
				<fabric8.recreate>true</fabric8.recreate>
			</properties>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.14.2</version>
				<configuration>
					<images>
						<image>
							<name>${docker.image}</name>
							<build>
								<from>${docker.from}</from>
								<assembly>
									<basedir>/app</basedir>
									<descriptorRef>${docker.assemblyDescriptorRef}</descriptorRef>
								</assembly>
								<env>
									<JAR>${project.artifactId}-${project.version}.jar</JAR>
									<JAVA_OPTIONS>-Djava.security.egd=/dev/./urandom -Dspring.profiles.active=regression-provider</JAVA_OPTIONS>
								</env>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>2.2.100</version>
				<executions>
					<execution>
						<id>json</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>json</goal>
						</goals>
					</execution>
					<execution>
						<id>attach</id>
						<phase>package</phase>
						<goals>
							<goal>attach</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


</project>
